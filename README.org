#+TITLE:     Org Macros
#+AUTHOR:    Fabrice Niessen
#+EMAIL:     (concat "fniessen" at-sign "pirilampo.org")
#+DATE:      2014-01-22 12:34
#+DESCRIPTION:
#+KEYWORDS:  org mode, macros
#+LANGUAGE:  en

#+PROPERTY: comments no
#+PROPERTY: eval     no
#+PROPERTY: noweb    yes
#+PROPERTY: tangle   org-macros.setup

#+INCLUDE: org-macros.setup
#+SETUPFILE: ~/src/org-style/setup/bigblow-local-abs.setup

* Overview

** Description

Once you've cloned [[https://github.com/fniessen/org-macros][Org-macros]], many macros will be ready to use within your Org
files.

Below is a list of the macros currently available.

*** Org export-specific (Org built-ins)

- [[#author][author]] macro
- [[#date][date]] macro
- [[#email][email]] macro
- [[#modification-time][modification-time]] macro
- [[#title][title]] macro

*** Basic formatting

- [[#bgcolor][bgcolor]] macro
- [[#color][color]] macro
- [[#highlight][highlight]] macro
- [[#loremipsum][loremipsum]] macro
- [[#noprint][noprint]] macro

*** Generic macros

- =chart= macro
- [[#currenttime][current-time]] macro
- =recently-updated= macro
- =tasklist= macro

*** Layout

- [[#info][info]] macro
- [[#minipage][minipage]] macro
- [[#note][note]] macro
- [[#tip][tip]] macro
- [[#warning][warning]] macro

*** Navigation and lists

- =children= macro (to display child pages)
- [[#toc][toc]] macro

** Installation

#+begin_src org :tangle no
,#+INCLUDE: /path/to/org-macros.setup
#+end_src

***************                                                          :info:
As there are Babel code blocks inside the ~org-macros.setup~ file, it needs to be
loaded via the =#+INCLUDE:= directive, not via a =#+SETUPFILE:=!
*************** END

** Usage

={{{name-of-the-macro(arg1,arg2)}}}=

** Cookie                                                            :noexport:

#+begin_src org
# -*- mode: org; -*-
#+end_src

* Org export-specific

** Author macro
   :PROPERTIES:
   :CUSTOM_ID: author
   :END:

The =author= macro outputs a list of users who have created or edited the
document.

*** Code

Org built-in.

*** Parameters

None.

*** Examples

People who have created and edited this document: {{{author}}}.

*** See also

Option =#+AUTHOR:=.

** Date macro
   :PROPERTIES:
   :CUSTOM_ID: date
   :END:

The =date= macro outputs the *date and time* specified in the document.

*** Code

Org built-in.

*** Parameters

1. Format string understood by =format-time-string=.

*** Examples

The date of this document is: {{{date(%Y-%m-%d %a %H:%M)}}}.

*** See also

- Option =#+DATE:=.
- [[#current-time][current-time]] macro.
- [[#modification-time][modification-time]] macro.

** Email macro
   :PROPERTIES:
   :CUSTOM_ID: email
   :END:

The =email= macro outputs the email of the author(s).

*** Code

Org built-in.

*** Parameters

None.

*** Examples

The email of this document is: {{{email}}}.

*** See also

Option =#+EMAIL:=.

** Modification-time macro
   :PROPERTIES:
   :CUSTOM_ID: modification-time
   :END:

The =modification-time= macro outputs the *modification date and time* /of/ the file
being exported.

*** Code

Org built-in.

*** Parameters

1. Format string understood by =format-time-string=.

*** Examples

This document was last modified on: {{{modification-time(%Y-%m-%d %a %H:%M)}}}.

*** See also

- [[#current-time][current-time]] macro.
- [[#date][date]] macro.

** Title macro
   :PROPERTIES:
   :CUSTOM_ID: title
   :END:

The =title= macro outputs the document title.

*** Code

Org built-in.

*** Parameters

None.

*** Examples

The title of this document is: {{{title}}}.

*** See also

Option =#+TITLE:=.

* Basic formatting

** BgColor macro
   :PROPERTIES:
   :CUSTOM_ID: bgcolor
   :END:

The =bgcolor= macro allows you to change the background color of a block of text.

*** Code

#+begin_src org
,#+MACRO: bgcolor @@html:<div style="background-color: $1;">$2</div>@@
#+end_src

*** Parameters

1. Color name or hexadecimal code.
2. Text you want to color.

*** Examples

{{{bgcolor(red, This information is important.)}}}
{{{bgcolor(#E0E0E0, This other isn't.)}}}

Common color names are supported by most Org exporters (HTML, LaTeX):

{{{bgcolor(red, red)}}}
{{{bgcolor(orange, orange)}}}
{{{bgcolor(yellow, yellow)}}}
{{{bgcolor(green, green)}}}
{{{bgcolor(blue, blue)}}}
{{{bgcolor(purple, purple)}}}
{{{bgcolor(violet, violet)}}}

You can also use hexadecimal color codes:

{{{bgcolor(#FF0000, #FF0000)}}}
{{{bgcolor(#00FF00, #00FF00)}}}
{{{bgcolor(#0000FF, #0000FF)}}}

*** See also

[[#color][color]] macro \\
[[#highlight][highlight]] macro

** Color macro
   :PROPERTIES:
   :CUSTOM_ID: color
   :END:

The =color= macro allows you to change the foreground color of inline text.

*** Code

#+begin_src org
,#+MACRO: color @@html:<span style="color: $1">$2</span>@@
#+end_src

*** Parameters

1. Color name or hexadecimal code.
2. Text you want to color.

*** Examples

{{{color(red, This information is important.)}}}
{{{color(#E0E0E0, This other isn't.)}}}

Common color names are supported by most Org exporters (HTML, LaTeX):

{{{color(red, red)}}}
{{{color(orange, orange)}}}
{{{color(yellow, yellow)}}}
{{{color(green, green)}}}
{{{color(blue, blue)}}}
{{{color(purple, purple)}}}
{{{color(violet, violet)}}}

You can also use hexadecimal color codes:

{{{color(#FF0000, #FF0000)}}}
{{{color(#00FF00, #00FF00)}}}
{{{color(#0000FF, #0000FF)}}}

*** See also

[[#bgcolor][bgcolor]] macro \\
[[#highlight][highlight]] macro

** Highlight macro
   :PROPERTIES:
   :CUSTOM_ID: highlight
   :END:

The =highlight= macro allows you to change the background color of inline text.

*** Code

#+begin_src org
,#+MACRO: highlight @@html:<span style="background-color: $1;">$2</span>@@
#+end_src

*** Parameters

1. Color name or hexadecimal code.
2. Text you want to color.

*** Examples

{{{highlight(red, This information is important.)}}}
{{{highlight(#E0E0E0, This other isn't.)}}}

Common color names are supported by most Org exporters (HTML, LaTeX):

{{{highlight(red, red)}}}
{{{highlight(orange, orange)}}}
{{{highlight(yellow, yellow)}}}
{{{highlight(green, green)}}}
{{{highlight(blue, blue)}}}
{{{highlight(purple, purple)}}}
{{{highlight(violet, violet)}}}

You can also use hexadecimal color codes:

{{{highlight(#FF0000, #FF0000)}}}
{{{highlight(#00FF00, #00FF00)}}}
{{{highlight(#0000FF, #0000FF)}}}

*** See also

[[#bgcolor][bgcolor]] macro \\
[[#color][color]] macro

** LoremIpsum macro
   :PROPERTIES:
   :CUSTOM_ID: loremipsum
   :END:

The =loremipsum= macro displays one paragraph of meaningless text that you can
use for demonstration purposes of visual elements such as font, typography or
layout.

*** Code

#+begin_src org
,#+MACRO: loremipsum Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
#+end_src

*** Parameters

None.

*** Examples

This is a basic example of the =Loremipsum= text:

{{{loremipsum}}}

** NoPrint macro
   :PROPERTIES:
   :CUSTOM_ID: noprint
   :END:

The =noprint= macro prevents text from being printed.

XXX Diff with an Org comment?

*** Code

*** Parameters

*** Examples

* Generic

** Current-time macro
   :PROPERTIES:
   :CUSTOM_ID: currenttime
   :END:

The =current-time= macro outputs the *current date and time* /when/ the document is being
exported.

*** Code

#+begin_src org
,#+name: current-time
,#+begin_src emacs-lisp :exports none :results silent
(format-time-string "%Y%m%d.%H%M")
,#+end_src

,#+MACRO: current-time call_current-time[:eval yes]()[:eval yes :results raw]
#+end_src

*************** We chose an inline Babel call so that the macro can be used in a paragraph. :tip:

*** XXX Parameters

1. Format string understood by =format-time-string=.

*** Examples

This document was last exported on: {{{current-time}}}.

*** See also

- [[#date][date]] macro.
- [[#modification-time][modification-time]] macro.

* Layout

** Info macro
   :PROPERTIES:
   :CUSTOM_ID: info
   :END:

*** Code

#+begin_src org
,#+MACRO: BeginInfoBox @<div class="org-info-box">@<img src="/worg/images/icons/info.png" alt="NOTE" />@<p>
,#+MACRO: EndInfoBox @</p>@<br style="clear:left;height:1px;" />@</div>@<br />
#+end_src

*** Parameters

None.

*** Examples

** MiniPage macro
   :PROPERTIES:
   :CUSTOM_ID: minipage
   :END:

*** Code

#+begin_src org
,#+MACRO: BeginMiniPage @<div style="border:1px solid #aaaaaa;padding:10px;width:780px;margin-left:auto;margin-right:auto;">
,#+MACRO: EndMiniPage @</div>
#+end_src

*** Parameters

*** Examples

** Note macro
   :PROPERTIES:
   :CUSTOM_ID: note
   :END:

*** Code

*** Parameters

None.

*** Examples

** Tip macro
   :PROPERTIES:
   :CUSTOM_ID: tip
   :END:

*** Code

#+begin_src org
,#+MACRO: tip @@html:<div class="inlinetask"><b>$1&nbsp;&nbsp;&nbsp;<span class="tag"><span class= "tip">tip</span></span></b>$2</div>@@
#+end_src

#+begin_src org
,#+MACRO: tipBegin @@html:<div class="inlinetask"><b>$1&nbsp;&nbsp;&nbsp;<span class="tag"><span class= "tip">tip</span></span></b>@@
,#+MACRO: tipEnd @@html:</div>@@
#+end_src

*** Parameters

None.

*** Examples

{{{tip(Tip example, Try doing it this way...)}}}

{{{tipBegin(Tip example)}}}
Try doing it this way...
{{{tipEnd}}}

{{{tip(, Try doing it this way...)}}}

{{{tipBegin()}}}
Try doing it this way...
{{{tipEnd}}}

{{{tip(Tip example, )}}}

{{{tipBegin(Tip example)}}}
{{{tipEnd}}}

** Warning macro
   :PROPERTIES:
   :CUSTOM_ID: warning
   :END:

*** Code

#+begin_src org
,#+MACRO: BeginWarningBox @@html:<div class="org-info-box"><img src="/worg/images/icons/warning.png" alt="NOTE" /><p>@@
,#+MACRO: EndWarningBox @@html:</p><br style="clear:left;height:1px;" /></div><br />@@
#+end_src

*** Parameters

None.

*** Examples

{{{BeginWarningBox}}}
Be cautious!
{{{EndWarningBox}}}

* Navigation and lists

** Toc macro
   :PROPERTIES:
   :CUSTOM_ID: toc
   :END:

Insert a table of contents.

*** Code

#+begin_src org
,#+MACRO: toc #+toc: headlines $1
#+end_src

*** Parameters

1. Number of headline levels.

*** Remarks

The =toc= macro *can't be inlined* in text.

*** Examples

Insert the TOC here, with one headline level:

{{{toc(1)}}}

* Others XXX

Keep a library of helpful CSS classes. Useful for debugging, but should be
avoided in the release version (separate markup and presentation). Since you
can use multiple class names (i.e. ~<p class="floatLeft alignLeft
width75">...</p>~), make use of them debugging your markup.

#+begin_src css :tangle no
.width100 { width: 100%; }
.width75 { width: 75%; }
.width50 { width: 50%; }
.floatLeft { float: left; }
.floatRight { float: right; }
.alignLeft { text-align: left; }
.alignRight { text-align: right; }

.clear         { clear: both; }
.float-left    { float: left; }
.float-right   { float: right; }

.highlight     { background: #FFFFCC; }

.wrap          { width: 960px; margin: 0 auto; }

.img-left      { float: left; margin: 4px 10px 4px 0; }
.img-right     { float: right; margin: 4px 0 4px 10px; }

.nopadding     { padding: 0; }
.noindent      { margin-left: 0; padding-left: 0; }
.nobullet      { list-style: none; list-style-image: none; }
#+end_src
